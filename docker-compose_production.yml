version: '3.6'
services:
  rabbit:
    image: rabbitmq:3.8.5-management
    ports:
      - '15673:15672' # in case user has rabbitMQ installed on host
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

  prod_app:
    build:
      context: .
      dockerfile: production.Dockerfile
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
    ports:
      - '80:80'
    depends_on:
      - rabbit
    environment:
      - PORT=8080
    command: nginx -g "daemon off";

  prod_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./output:/output # Stores all the output to this directory
      - ./log:/log # For logging
      - ./input:/input # Named volume
      - pipeline_volume:/pipeline/AMP-Predictor-Test
    ports:
      - '5000'
    depends_on:
      - rabbit
    restart: on-failure
    environment:
      - LUIGI_CONFIG_PATH=/pipeline/AMP-Predictor-Test/luigi.cfg
      - NODE_ENV=production
    command: node server.js

  prod_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./output:/output # Stores all the output to this directory
      - ./log:/log # For logging
      - ./input:/input # Named volume
      - pipeline_volume:/pipeline/AMP-Predictor-Test
    depends_on:
      - rabbit
    restart: on-failure
    environment:
      - LUIGI_CONFIG_PATH=/pipeline/AMP-Predictor-Test/luigi.cfg
    command: node worker.js

volumes:
  pipeline_volume: