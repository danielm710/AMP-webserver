version: '3'
services:
  nginx:
    image: nginx:stable
    ports:
      - '80:80'
    volumes:
      - ./nginx/dev/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    restart: on-failure

  rabbit:
    image: rabbitmq:management
    ports:
      - '15673:15672' # in case user has rabbitMQ installed on host
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/backend
      - ./output:/output # Stores all the output to this directory
      - ./log:/log # For logging
      - ./input:/input # Named volume
      - ./pipeline:/pipeline
      #- backend_node_module:/backend/node_modules
    depends_on:
      - rabbit
    restart: on-failure
    environment:
      - LUIGI_CONFIG_PATH=/pipeline/AMP-Predictor-Test/luigi.cfg
    command: npx nodemon worker.js

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/backend
      - ./output:/output # Stores all the output to this directory
      - ./log:/log # For logging
      - ./input:/input # Named volume
      - ./pipeline:/pipeline
      #- backend_node_module:/backend/node_modules
    ports:
      - '5000:5000'
    depends_on:
      - rabbit
    restart: on-failure
    tty: true
    environment:
      - LUIGI_CONFIG_PATH=/pipeline/AMP-Predictor-Test/luigi.cfg
      - NODE_ENV=development
      - HOST=127.0.0.1
    command: npx nodemon -e js server.js

  frontend:
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    volumes:
      #- /frontend/node_modules
      - ./frontend:/frontend
    ports:
      - '3000:3000'
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
    tty: true
    command: npm start

volumes:
  pipeline:
  backend_node_module: